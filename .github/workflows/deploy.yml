name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  PROJECT_ID: nava-labs
  REGION: us-central1
  ARTIFACT_REGISTRY: us-central1-docker.pkg.dev/nava-labs/labs-asp

jobs:
  # Build and deploy job
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build application
      run: pnpm build

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        service_account: github-actions-deploy@nava-labs.iam.gserviceaccount.com
        workload_identity_provider: projects/279889631214/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Determine environment and service name
      id: env
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          # For pull requests: pr-{number}-labs-asp
          SERVICE_NAME="pr-${{ github.event.number }}-labs-asp"
          ENVIRONMENT="preview"
          DATABASE_SECRET="database-url-preview"
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          # For main branch: labs-asp-prod
          SERVICE_NAME="labs-asp-prod"
          ENVIRONMENT="production"
          DATABASE_SECRET="database-url-production"
        elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          # For develop branch: labs-asp-dev
          SERVICE_NAME="labs-asp-dev"
          ENVIRONMENT="dev"
          DATABASE_SECRET="database-url-preview"
        else
          # For feature branches: branch-{name}-{short-sha}-labs-asp
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          SERVICE_NAME="branch-${BRANCH_NAME}-${SHORT_SHA}-labs-asp"
          ENVIRONMENT="preview"
          DATABASE_SECRET="database-url-preview"
        fi
        
        echo "SERVICE_NAME=${SERVICE_NAME}" >> $GITHUB_OUTPUT
        echo "ENVIRONMENT=${ENVIRONMENT}" >> $GITHUB_OUTPUT
        echo "DATABASE_SECRET=${DATABASE_SECRET}" >> $GITHUB_OUTPUT
        echo "IMAGE_TAG=${ARTIFACT_REGISTRY}/app:${GITHUB_SHA}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      run: |
        docker build \
          --build-arg NODE_ENV=${{ steps.env.outputs.ENVIRONMENT }} \
          --build-arg GITHUB_SHA=${GITHUB_SHA} \
          -t ${{ steps.env.outputs.IMAGE_TAG }} \
          .
        
        docker push ${{ steps.env.outputs.IMAGE_TAG }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ steps.env.outputs.SERVICE_NAME }} \
          --image=${{ steps.env.outputs.IMAGE_TAG }} \
          --platform=managed \
          --region=${{ env.REGION }} \
          --service-account=labs-asp-cloud-run@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
          --allow-unauthenticated \
          --cpu=2000m \
          --memory=4Gi \
          --timeout=3600 \
          --max-instances=100 \
          --min-instances=0 \
          --set-env-vars="NODE_ENV=${{ steps.env.outputs.ENVIRONMENT }}" \
          --set-env-vars="ENVIRONMENT=${{ steps.env.outputs.ENVIRONMENT }}" \
          --set-env-vars="GCP_PROJECT_ID=${{ env.PROJECT_ID }}" \
          --set-env-vars="STORAGE_BUCKET=labs-asp-artifacts-${{ steps.env.outputs.ENVIRONMENT }}" \
          --set-secrets="DATABASE_URL=${{ steps.env.outputs.DATABASE_SECRET }}:latest" \
          --set-secrets="OPENAI_API_KEY=openai-api-key:latest" \
          --set-secrets="ANTHROPIC_API_KEY=anthropic-api-key:latest" \
          --set-secrets="EXA_API_KEY=exa-api-key:latest" \
          --set-secrets="MASTRA_JWT_SECRET=mastra-jwt-secret:latest" \
          --set-secrets="MASTRA_APP_PASSWORD=mastra-app-password:latest" \
          --port=4111

    - name: Get service URL
      id: url
      run: |
        URL=$(gcloud run services describe ${{ steps.env.outputs.SERVICE_NAME }} \
          --platform=managed \
          --region=${{ env.REGION }} \
          --format='value(status.url)')
        echo "SERVICE_URL=${URL}" >> $GITHUB_OUTPUT

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const serviceUrl = '${{ steps.url.outputs.SERVICE_URL }}';
          const serviceName = '${{ steps.env.outputs.SERVICE_NAME }}';
          
          const body = `## üöÄ Preview Deployment
          
          Your changes have been deployed to a preview environment:
          
          **Service**: \`${serviceName}\`
          **URL**: ${serviceUrl}
          **Environment**: Preview
          
          ### Quick Links
          - üîê [Login](${ serviceUrl }/auth/login)
          - ü§ñ [Web Automation Agent](${ serviceUrl }/agents/webAutomationAgent/chat/)
          - üìä [Health Check](${ serviceUrl }/health)
          
          The preview will be available until this PR is closed or merged.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });

    - name: Clean up old preview deployments
      if: github.event_name == 'pull_request' && github.event.action == 'closed'
      run: |
        # Delete the Cloud Run service for this PR
        gcloud run services delete ${{ steps.env.outputs.SERVICE_NAME }} \
          --platform=managed \
          --region=${{ env.REGION }} \
          --quiet || true

  # Cleanup job for closed PRs
  cleanup:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        service_account: github-actions-deploy@nava-labs.iam.gserviceaccount.com
        workload_identity_provider: projects/279889631214/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Delete preview service
      run: |
        SERVICE_NAME="pr-${{ github.event.number }}-labs-asp"
        gcloud run services delete ${SERVICE_NAME} \
          --platform=managed \
          --region=${{ env.REGION }} \
          --quiet || true
        
        echo "Cleaned up preview deployment: ${SERVICE_NAME}"
